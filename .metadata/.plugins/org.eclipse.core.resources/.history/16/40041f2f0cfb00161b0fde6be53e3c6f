/*  Given a composite systems comprised of randomly distributed insulating and metallic materials: what fraction of the materials
 *  need to be metallic so that the composite system is an electrical conductor? Given a porous landscape with water on the surface
 *   (or oil below), under what conditions will the water be able to drain through to the bottom (or the oil to gush through to the surface)? 
 *   Scientists have defined an abstract process known as percolation to model such situations.*/
public class Percolation
{
				   public boolean[][] grid;
				   int size = 0;
				   static private FindConnectivity connect ;
				   public Percolation(int n)                // create n-by-n grid, with all sites blocked
				   {
					   		grid =  new boolean[n][n];
					   		for (int i = 0; i < grid.length; i++)
					   		{
					   			for (int j = 0; j < grid[i].length; j++)
					   			{
									  grid[i][j] = false;
									//  grid[i][j] = j + 1;
								}
							}
					   		
				   }
				   public void open(int row, int col)    // open site (row, col) if it is not open already
				   {
					   		if(isOpen(row, col))
					   		{
					   				if ( isOpen(row -1 , col))
					   				{
					   						connect.Union(GetIndex(row, col), GetIndex(row - 1, col));
									}
					   				if ( isOpen(row + 1 , col))
					   				{
					   						connect.Union(GetIndex(row, col), GetIndex(row + 1, col));
									}
					   				if ( isOpen(row , col -1 ))
					   				{
					   						connect.Union(GetIndex(row, col), GetIndex(row - 1, col -1));
									}
					   				if ( isOpen(row  , col+ 1))
					   				{
					   						connect.Union(GetIndex(row, col), GetIndex(row, col + 1));
									}
					   				return;
					   		}
					   		grid[ row ][ col ] = true;
					   		size++;
				   }
				   
				   public boolean isOpen(int row, int col)  // is site (row, col) open?
				   {
					   		if (grid[ row ][ col ] = true) 
					   		{
					   			   return true;
							}
							return false;
				   }
				   public boolean isFull(int row, int col)  // is site (row, col) full?
				   {
					return false;
					   
				   }
				   public int numberOfOpenSites()       // number of open sites
				   {
					   		return size;
				   }
				   public boolean percolates()              // does the system percolate?
				   {
					   		
					   		return false;
				   }
				   
			       // this method converts 2d array into 1d array
				   public int GetIndex(int row, int col) 
				   {
					   			int i = row - 1;
					   			int j = col -1 ;
					   			
					   			int index = grid.length * i + j ;
					   			return index;
				   }
				   public static void main(String[] args)
				   {
					   		  int sizeOfGrid = 4;
					   		  int row = (int)( Math.random() * sizeOfGrid );
					   		  int col = (int) ( Math.random() * sizeOfGrid );
						      Percolation percolation = new Percolation(sizeOfGrid);
						      percolation.open(row, col);
						      connect = new FindConnectivity(sizeOfGrid);
						     
				   }
				   
				
}
